{"ts":1379089932729,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"## Homework 6.1: Follow the Arrows!\n\n* Use your upstream remote to pull homework-6.1.md into your workspace on Cloud9 (hint: git pull upstream master).\n \n* Find a section in your projects that has some decent looping and branching code: at least five branches that you can diagram.\n* Copy-paste your example into homework-6.1.md and attempt to identify the loop conditions with comments e.g. \n\n```php\nwhile ( $count < $max ) {\n// while $count is less than $max\n\nforeach ( $collection as $item ) {\n// until there are no more $items in the $collection\"\n```\n\n* Save your file locally, git add and git commit it (don't forget: -m 'explain why!'), and git push your changes to your Github account.\n* **Bonus points:** open a pull request back to the original repo.\n"]],"start1":0,"start2":0,"length1":0,"length2":760}]],"length":760}
{"contributors":[],"silentsave":false,"ts":1380293636376,"patch":[[{"diffs":[[0,"l repo.\n"],[1,"\n\npublic function getChartByIndex($index = null)\n    {\n        $chartCount = count($this->_chartCollection);\n        if ($chartCount == 0) {\n            return false;\n        }\n        if (is_null($index)) {\n            $index = --$chartCount;\n        }\n        if (!isset($this->_chartCollection[$index])) {\n            return false;\n        }\n\n        return $this->_chartCollection[$index];\n    }\n\n    /**\n     * Return an array of the names of charts on this worksheet\n     *\n     * @return string[] The names of charts\n     * @throws PHPExcel_Exception\n     */\n    public function getChartNames()\n    {\n        $chartNames = array();\n        foreach($this->_chartCollection as $chart) {\n            $chartNames[] = $chart->getName();\n        }\n        return $chartNames;"]],"start1":752,"start2":752,"length1":8,"length2":784}]],"length":1536,"saved":false}
{"ts":1380298245756,"patch":[[{"diffs":[[0," repo.\n\n"],[1,"(Not a loop:)"],[0,"\npublic "]],"start1":753,"start2":753,"length1":16,"length2":29},{"diffs":[[0,"ex];\n    }\n\n"],[1,"(Actual Loop:)\n"],[0,"    /**\n    "]],"start1":1162,"start2":1162,"length1":24,"length2":39}]],"length":1564,"saved":false}
